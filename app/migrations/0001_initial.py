# Generated by Django 4.2.7 on 2023-11-20 09:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import taggit.managers


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        (
            "taggit",
            "0006_rename_taggeditem_content_type_object_id_taggit_tagg_content_8fc721_idx",
        ),
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("username", models.CharField(max_length=100, unique=True)),
                ("email", models.EmailField(max_length=255, unique=True)),
                ("bio", models.TextField(default="", null=True)),
                (
                    "avatar",
                    models.ImageField(
                        default="default_avatar.png",
                        null=True,
                        upload_to="profile_pictures",
                    ),
                ),
                (
                    "background",
                    models.ImageField(
                        default="default_bg.png",
                        null=True,
                        upload_to="profile_backgrounds",
                    ),
                ),
                ("is_staff", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "tag",
                    taggit.managers.TaggableManager(
                        help_text="A comma-separated list of tags.",
                        through="taggit.TaggedItem",
                        to="taggit.Tag",
                        verbose_name="Tags",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Follow",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "followed_user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="followers_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "follower",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="following_set",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("follower", "followed_user")},
            },
        ),
        migrations.AddField(
            model_name="user",
            name="followed_users",
            field=models.ManyToManyField(
                blank=True,
                related_name="followers",
                through="app.Follow",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="groups",
            field=models.ManyToManyField(
                blank=True,
                help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                related_name="user_set",
                related_query_name="user",
                to="auth.group",
                verbose_name="groups",
            ),
        ),
        migrations.AddField(
            model_name="user",
            name="user_permissions",
            field=models.ManyToManyField(
                blank=True,
                help_text="Specific permissions for this user.",
                related_name="user_set",
                related_query_name="user",
                to="auth.permission",
                verbose_name="user permissions",
            ),
        ),
        migrations.CreateModel(
            name="PlayStyle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "play_style_name",
                    models.CharField(
                        choices=[
                            ("relax", "Relaks"),
                            ("competitive", "Rywalizacja"),
                            ("ranked", "Gra rankingowa"),
                            ("tournament", "Gra turniejowa"),
                            ("weekday", "W tygodniu"),
                            ("weekend", "Weekend"),
                            ("morning", "Poranek"),
                            ("afternoon", "Popołudnie"),
                            ("evening", "Wieczór"),
                            ("night", "Noc"),
                            ("mic_on", "Włączony mikrofon"),
                            ("mic_off", "Wyłączony mikrofon"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "play_style_name")},
            },
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "platform_name",
                    models.CharField(
                        choices=[
                            ("pc", "PC"),
                            ("xbox", "Xbox"),
                            ("playstation", "PlayStation"),
                            ("nintendo", "Nintendo Switch"),
                            ("mobile", "Mobilne"),
                            ("vr", "VR"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "platform_name")},
            },
        ),
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "game_name",
                    models.CharField(
                        choices=[
                            ("fortnite", "Fortnite"),
                            ("apexlegends", "Apex Legends"),
                            ("warzone", "Call of Duty: Warzone"),
                            ("apexlegends", "Apex Legends"),
                            ("csgo", "Counter-Strike 2"),
                            ("overwatch", "Overwatch"),
                            ("lol", "League of Legends (LoL)"),
                            ("dota2", "Dota 2"),
                            ("pubg", "PlayerUnknown's Battlegrounds"),
                            ("rocketleague", "Rocket League"),
                            ("rainbowsixsiege", "Rainbow Six Siege"),
                            ("minecraft", "Minecraft"),
                            ("worldofwarcraft", "World of Warcraft"),
                            ("genshinimpact", "Genshin Impact"),
                            ("amongus", "Among Us"),
                            ("fallguys", "Fall Guys: Ultimate Knockout"),
                            ("valorant", "Valorant"),
                            ("fifa", "FIFA"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "game_name")},
            },
        ),
        migrations.CreateModel(
            name="Contact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "contact_form",
                    models.CharField(
                        choices=[
                            ("discord", "Discord"),
                            ("steam", "Steam"),
                            ("epic", "Epic Games"),
                            ("battlenet", "Battle.net"),
                            ("xboxlive", "Xbox Live"),
                            ("psnetwork", "PlayStation Network"),
                            ("nintendo", "Nintendo Switch"),
                            ("ubisoftconnect", "Ubisoft Connect"),
                            ("twitter", "Twitter"),
                            ("instagram", "Instagram"),
                            ("facebook", "Facebook"),
                        ],
                        max_length=50,
                        null=True,
                    ),
                ),
                ("contact_username", models.CharField(max_length=100, null=True)),
                ("contact_link", models.URLField(null=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "unique_together": {("user", "contact_form")},
            },
        ),
    ]
